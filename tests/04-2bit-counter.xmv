MODULE main

VAR
a: integer;
b: integer;
line: integer;

ASSIGN
init(a) := 0;
init(b) := 0;
init(line) := 1;

next(line) := case
	line = 5 & (b = 1 & a = 1): line + 1; -- if(True)
	line = 5: 8; -- if(False)
	line = 2 & (b = 0 & a = 1): line + 1; -- if(True)
	line = 3: 9; -- end if(True) 
	line = 2: 5; -- else
	line = 9 & (a = 1): line + 1; -- if(True)
	line = 10: 14; -- end if(True) 
	line = 9: 12; -- else
	line = 1 & (a + b < 2): line + 1; -- while(True)
	line = 1:  15; -- while(False)
	line = 14: 1; -- loop while
	line = 15: 15; 
	TRUE: line + 1; 
esac;

next(a) := case
	line = 10: 0;
	line = 12: 1;
	TRUE: a; 
esac;

next(b) := case
	line = 3: 1;
	line = 6: 0;
	TRUE: b; 
esac;

LTLSPEC F (a = 1 & b = 1);
LTLSPEC (a = 0 & b = 0) -> F (a = 1 & b = 0);
LTLSPEC (a = 1 & b = 0) -> F (a = 0 & b = 1);
LTLSPEC (a = 0 & b = 1) -> F (a = 1 & b = 1);
