MODULE main

VAR
a: integer;
b: integer;
line: integer;

ASSIGN
init(a) := 0;
init(b) := 0;
init(line) := 1;

next(line) := case
	line = 6 & (b = 1 & a = 1): line + 1; -- if(True)
	line = 6: 9; -- if(False)
	line = 3 & (b = 0 & a = 1): line + 1; -- if(True)
	line = 4: 10; -- end if(True) 
	line = 3: 6; -- else
	line = 10 & (a = 1): line + 1; -- if(True)
	line = 11: 15; -- end if(True) 
	line = 10: 13; -- else
	line = 2 & (a + b < 2): line + 1; -- while(True)
	line = 2:  16; -- while(False)
	line = 15: 2; -- loop while
	line = 16: 16; 
	TRUE: line + 1; 
esac;

next(a) := case
	line = 11: 0;
	line = 13: 1;
	TRUE: a; 
esac;

next(b) := case
	line = 4: 1;
	line = 7: 0;
	TRUE: b; 
esac;

LTLSPEC F (a = 1 & b = 1);
LTLSPEC (a = 0 & b = 0) -> F (a = 1 & b = 0);
LTLSPEC (a = 1 & b = 0) -> F (a = 0 & b = 1);
LTLSPEC (a = 0 & b = 1) -> F (a = 1 & b = 1);
