MODULE main

VAR
total: integer;
y: integer;
x: integer;
line: integer;

ASSIGN
init(total) := 0;
init(y) := 0;
init(x) := 1;
init(line) := 1;

next(line) := case
	line = 7 & (y = x): line + 1; -- if(True)
	line = 7: 10; -- if(False)
	line = 5 & (TRUE): line + 1; -- while(True)
	line = 5:  12; -- while(False)
	line = 11: 5; -- loop while
	line = 8: 12; -- break
	line = 3 & (x < 3): line + 1; -- while(True)
	line = 3:  14; -- while(False)
	line = 13: 3; -- loop while
	line = 14: 14; 
	TRUE: line + 1; 
esac;

next(total) := case
	line = 6: total + y;
	TRUE: total; 
esac;

next(y) := case
	line = 4: 0;
	line = 10: y + 1;
	TRUE: y; 
esac;

next(x) := case
	line = 12: x + 1;
	TRUE: x; 
esac;

INVARSPEC line = 14 -> total=4;
